name: Deploy to AWS EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build with Gradle
        run: ./gradlew clean build

      - name: Copy JAR to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          source: "build/libs/*.jar"
          target: "~/"

      - name: SSH and restart app with health check
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            echo "Stopping previous app (if running)..."
            pkill -f 'java -jar' || true

            echo "Starting new app..."
            nohup java -jar ~/hotel-booking-application-*.jar > app.log 2>&1 < /dev/null & disown

            echo "Waiting for app to start..."
            sleep 30

            echo "Performing health check on /test..."
            HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8081/test || true)

            if [ "$HTTP_STATUS" != "200" ]; then
              echo "❌ Health check failed with status $HTTP_STATUS!"
              exit 1
            else
              echo "✅ Health check succeeded."
            fi
